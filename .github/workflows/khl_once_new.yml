name: khl_once_new

on:
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      UID: "897694"          # UID матча
      SEASON: "1369"         # сезон
      OUT_DIR: "public/khl/json"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Fetch PDF via curl → parse → write JSON
        run: |
          set -e
          mkdir -p "$OUT_DIR"
          PDF_URL="https://khl.ru/pdf/${{ env.SEASON }}/${{ env.UID }}/game-${{ env.UID }}-start-ru.pdf"
          UA="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"

          curl -sSL --http2 --fail \
            -H "Accept: application/pdf,application/octet-stream;q=0.9,*/*;q=0.8" \
            -H "Accept-Language: ru,en;q=0.9" \
            -H "Referer: https://khl.ru/" \
            -H "User-Agent: $UA" \
            -o /tmp/game.pdf "$PDF_URL"

          python - <<'PY'
          import re, json, pathlib, fitz, os, unicodedata

UID = int(os.environ["UID"])
OUT_DIR = os.environ["OUT_DIR"]

def strip_accents(s: str) -> str:
    return ''.join(c for c in unicodedata.normalize('NFD', s) if unicodedata.category(c) != 'Mn')

# читаем PDF
pdf_bytes = pathlib.Path("/tmp/game.pdf").read_bytes()
doc = fitz.open(stream=pdf_bytes, filetype="pdf")
full_text = "\n".join(p.get_text("text") for p in doc)
doc.close()

# нормализуем
full_text_norm = strip_accents(full_text).replace("\xa0"," ").replace("\u2009"," ").replace("\u202f"," ")
full_text_norm = re.sub(r"[ \t]+"," ", full_text_norm)
lines = [l.strip() for l in full_text_norm.splitlines()]

# === Диагностика: сохраняем сырой текст ===
raw_dir = pathlib.Path(OUT_DIR).parent / "raw"  # public/khl/raw
raw_dir.mkdir(parents=True, exist_ok=True)

(pathlib.Path(OUT_DIR) / f"{UID}.json").parent.mkdir(parents=True, exist_ok=True)

# полный текст (много строк)
(pathlib.Path(raw_dir) / f"{UID}_full.txt").write_text(full_text_norm, encoding="utf-8")

# хвост для быстрого просмотра (последние 150 строк)
tail = "\n".join(lines[-150:])
(pathlib.Path(raw_dir) / f"{UID}_tail150.txt").write_text(tail, encoding="utf-8")

# временный «пустой» JSON, чтобы страница деплоилась
out = {
  "ok": True,
  "uid": UID,
  "data": {
    "teams": [None, None],
    "date": None,
    "time_msk": None,
    "main_referees": [],
    "linesmen": [],
    "goalies": {"home": [], "away": []}
  },
  "debug": {
    "lines_total": len(lines),
    "hints": [
      f"Открой raw tail: khl/raw/{UID}_tail150.txt",
      f"Открой raw full: khl/raw/{UID}_full.txt"
    ]
  }
}
(pathlib.Path(OUT_DIR) / f"{UID}.json").write_text(json.dumps(out, ensure_ascii=False, indent=2), encoding="utf-8")
print("Wrote diagnostic files.")



          PY

      - uses: actions/upload-pages-artifact@v3
        with: { path: ./public }

      - uses: actions/deploy-pages@v4
