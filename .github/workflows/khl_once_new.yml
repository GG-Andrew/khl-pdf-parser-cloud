name: khl_once_new

on:
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      UID: "897694"          # UID матча
      SEASON: "1369"         # сезон
      OUT_DIR: "public/khl/json"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Fetch PDF via curl → parse → write JSON
        run: |
          set -e
          mkdir -p "$OUT_DIR"
          PDF_URL="https://khl.ru/pdf/${{ env.SEASON }}/${{ env.UID }}/game-${{ env.UID }}-start-ru.pdf"
          UA="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"

          curl -sSL --http2 --fail \
            -H "Accept: application/pdf,application/octet-stream;q=0.9,*/*;q=0.8" \
            -H "Accept-Language: ru,en;q=0.9" \
            -H "Referer: https://khl.ru/" \
            -H "User-Agent: $UA" \
            -o /tmp/game.pdf "$PDF_URL"

          python - <<'PY'
          import re, fitz, pathlib

# читаем PDF из /tmp
pdf_bytes = pathlib.Path("/tmp/game.pdf").read_bytes()
doc = fitz.open(stream=pdf_bytes, filetype="pdf")

# соберём постранично текст (и покажем разными режимами извлечения)
texts = []
for i, page in enumerate(doc):
    t1 = page.get_text("text")
    t2 = page.get_text("blocks")
    print(f"\n===== PAGE {i+1} :: get_text('text') =====\n{t1}\n")
    print(f"===== PAGE {i+1} :: get_text('blocks') =====\n{t2}\n")
    texts.append(t1)
doc.close()

full = "\n".join(texts)
lines = [re.sub(r"[ \t]+"," ", x).strip() for x in full.splitlines() if x.strip()]

print("\n===== HEAD 80 LINES =====")
for i, l in enumerate(lines[:80], 1):
    print(f"{i:03d}: {l}")

print("\n===== TAIL 120 LINES =====")
for i, l in enumerate(lines[-120:], len(lines)-120+1):
    print(f"{i:03d}: {l}")


          PY

      - uses: actions/upload-pages-artifact@v3
        with: { path: ./public }

      - uses: actions/deploy-pages@v4
